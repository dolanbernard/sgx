[package]
name = "mc-sgx-tservice"
version = "0.6.0"
authors = { workspace = true }
# See https://crates.io/category_slugs for valid categories
categories = ["api-bindings", "hardware-support"]
description = "Rust wrappers for the `sgx_tservice` library."
edition = { workspace = true }
# See https://crates.io/keywords for the common keywords
keywords = ["sgx"]
license = { workspace = true }
readme = "README.md"
repository = { workspace = true }
rust-version = { workspace = true }

[lib]
# test false due to needing trts, and thus an enclave to fully link
test = false
doctest = false

[dependencies]
displaydoc = { version = "0.2.3", default-features = false }
mc-sgx-core-sys-types = { path = "../core/sys/types", version = "=0.6.0" }
mc-sgx-core-types = { path = "../core/types", version = "=0.6.0" }
mc-sgx-trts = { path = "../trts", version = "=0.6.0" }
mc-sgx-tservice-sys = { path = "sys", version = "=0.6.0" }
mc-sgx-tservice-sys-types = { path = "sys/types", version = "=0.6.0" }
mc-sgx-tservice-types = { path = "types", version = "=0.6.0", features = [ "alloc" ] }
mc-sgx-util = { path = "../util", version = "=0.6.0" }

[dev-dependencies]
mc-sgx-tservice-types = { path = "types", version = "=0.6.0", features = [ "test-utils" ] }
yare = "1.0.2"
